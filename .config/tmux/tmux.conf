set -g default-terminal "tmux-256color"
set -as terminal-features ",alacritty*:RGB"
set -g focus-events on
set -g repeat-time 125
set -g base-index 1
set -g renumber-windows
set -g buffer-limit 20
set -g history-limit 30000
set -g remain-on-exit off
set -g mouse on
set -g set-clipboard external
set -g repeat-time 700
set -wg automatic-rename off
set -sg escape-time 0

setw -g pane-base-index 1
set-option -g allow-rename off
# Set parent terminal title to reflect current window in tmux session
set -g set-titles on
set -g set-titles-string "#T"

# Activity bell and whistles
set -g visual-activity both
set -g visual-silence both

unbind r
bind R source-file ~/.config/tmux/tmux.conf \; display "loaded"

unbind C-b
set-option -g prefix M-a
bind M-a send-prefix

# Prefer vi style key table
setw -g mode-keys vi

# vim-like pane switching
bind -r ^ last-window
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R

bind-key -r -T prefix       K     resize-pane -U 5
bind-key -r -T prefix       J     resize-pane -D 5
bind-key -r -T prefix       H     resize-pane -L 5
bind-key -r -T prefix       L     resize-pane -R 5

# general status bar settings
set -g status on
set -g status-interval 5
set -g status-position top
set -g status-justify left
set -g status-right-length 75
# set -g status-style 'bg=#333333 fg=#5eacd3'
bind z if -F '#{s/off//:status}' 'set status off' 'set status on'

bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "wl-copy && wl-paste -n | wl-copy -p"
bind p run "wl-paste -n | tmux load-buffer - ; tmux paste-buffer"

# Unbind default key bindings, we're going to override
unbind "\$" # rename-session
unbind ,    # rename-window
unbind %    # split-window -h
unbind '"'  # split-window
unbind "}"    # swap-pane -D
unbind "{"    # swap-pane -U
unbind [    # paste-buffer
unbind ]    # copy-mode
unbind "'"  # select-window
unbind n    # next-window
unbind p    # previous-window
unbind M-n  # next window with alert
unbind M-p  # next window with alert
unbind o    # focus thru panes
unbind &    # kill-window
unbind "#"  # list-buffer
unbind =    # choose-buffer
unbind !    # break-pane
# unbind z    # zoom-pane
# unbind M-Up  # resize 5 rows up
# unbind M-Down # resize 5 rows down
# unbind M-Right # resize 5 rows right
# unbind M-Left # resize 5 rows left

# Edit configuration and reload
bind C-e new-window -n 'tmux.conf' "sh -c '\${EDITOR:-vim} ~/.config/tmux/tmux.conf && tmux source ~/.config/tmux/tmux.conf && tmux display \"Config reloaded\"'"

# new window and retain cwd
# bind n new-window -c "#{pane_current_path}"

# Prompt to rename window right after it's created
# set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'

# Rename session and window
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
# bind R command-prompt -I "#{session_name}" "rename-session '%%'"

# Split panes
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Select pane and windows
bind -r [ previous-window
bind -r ] next-window
# bind -r C-[ select-pane -t :.-
# bind -r C-] select-pane -t :.+
bind -r Tab last-window   # cycle thru MRU tabs
bind -r C-o swap-pane -D

# Zoom pane
bind m resize-pane -Z

# Kill pane/window/session shortcuts
bind x kill-pane
bind X kill-window
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session
bind o kill-pane -a # leave ONLY this pane, kill others

# Break pane into separate window
bind T break-pane

# Merge session with another one (e.g. move all windows)
# If you use adhoc 1-window sessions, and you want to preserve session upon exit
# but don't want to create a lot of small unnamed 1-window sessions around
# move all windows from current session to main named one (dev, work, etc)
# bind C-u command-prompt -p "Session to merge with: " \
#    "run-shell 'yes | head -n #{session_windows} | xargs -I {} -n 1 tmux movew -t %%'"

# Swap panes back and forth with 1st pane
# When in main-(horizontal|vertical) layouts, the biggest/widest panel is always @1
# bind \\ if '[ #{pane_index} -eq 1 ]' \
#      'swap-pane -s "!"' \
#      'select-pane -t:.1 ; swap-pane -d -t 1 -s "!"'

# Detach from session
# bind d detach
# bind D if -F '#{session_many_attached}' \
#     'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
#     'display "Session has only 1 client attached"'

# ===     Copy mode, scroll and clipboard      ===

# set -g @copy_use_osc52_fallback on

# Paste from buffer
# bind p paste-buffer
# bind C-p choose-buffer

# Enter copy mode
bind v copy-mode
bind -n M-Up copy-mode

# Start selection
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi r send-keys -X rectangle-toggle
bind -T copy-mode-vi H send-keys -X start-of-line
bind -T copy-mode-vi L send-keys -X end-of-line

# Scroll up/down by 1 line, half screen, whole screen
bind -T copy-mode-vi K                 send-keys -X scroll-up
bind -T copy-mode-vi J                 send-keys -X scroll-down
bind -T copy-mode-vi C-u               send-keys -X halfpage-up
bind -T copy-mode-vi C-d               send-keys -X halfpage-down
bind -T copy-mode-vi PageDown          send-keys -X page-down
bind -T copy-mode-vi PageUp            send-keys -X page-up

# When scrolling with mouse wheel, reduce number of scrolled rows per tick to "2" (default is 5)
bind -T copy-mode-vi WheelUpPane       select-pane \; send-keys -X -N 2 scroll-up
bind -T copy-mode-vi WheelDownPane     select-pane \; send-keys -X -N 2 scroll-down

# wrap default shell in reattach-to-user-namespace if available
# there is some hack with `exec & reattach`, credits to "https://github.com/gpakosz/.tmux"
# don't really understand how it works, but at least window are not renamed to "reattach-to-user-namespace"
# if -b "command -v reattach-to-user-namespace > /dev/null 2>&1" \
#     "run 'tmux set -g default-command \"exec $(tmux show -gv default-shell) 2>/dev/null & reattach-to-user-namespace -l $(tmux show -gv default-shell)\"'"

# ===       Plugins        ===

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'samoshkin/tmux-plugin-sysstat'
# set -g @plugin 'christoomey/vim-tmux-navigator'

set -g @catppuccin_window_right_separator "█ "
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_middle_separator " | "

set -g @catppuccin_window_default_fill "none"
set -g @catppuccin_window_current_fill "all"

set -g @catppuccin_status_modules_right "application session"
set -g @catppuccin_status_left_separator "█"
set -g @catppuccin_status_right_separator "█"

# Run all plugins' scripts
run "~/.config/tmux/plugins/tpm/tpm"
